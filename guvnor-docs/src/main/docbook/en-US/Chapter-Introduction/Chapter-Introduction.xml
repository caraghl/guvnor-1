<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="./" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>Introduction</title>

  <para>This section introduces &guvnor.app.name;. See the other relevant sections for installation, usage and
  administration.</para>

  <figure>
    <title>The Guvnor main screen</title>

    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="images/Chapter-Guvnor/NewMainScreen.png" format="PNG"></imagedata>
      </imageobject>
    </mediaobject>
  </figure>

  <section>
    <title>What is a Business Rules Manager?</title>

    <para>A business rules manager allows people to manage rules in a multi user environment, it is a single point of
    truth for your business rules, allowing change in a controlled fashion, with user friendly interfaces.</para>

    <para>Guvnor is the name of the web and network related components for managing rules with drools. This combined
    with the core drools engine and other tools forms the business rules manager.</para>

    <section>
      <title>When to use Guvnor</title>

      <para>You should consider Guvnor if any of the following apply to you: You need to manage versions/deployment of
      rules, you need to let multiple users of different skill levels access and edit rules, you don't have any existing
      infrastructure to manage rules, you have lots of "business" rules (as opposed to technical rules as part of an
      application).</para>

      <para>Guvnor can be used on its own, or with the IDE tooling (often both together).</para>

      <para>Guvnor can be "branded" and made part of your application, or it can be a central rule repository.</para>

      <section>
        <title>When to not use Guvnor</title>

        <para>In some situations applications may exist which have the rules in a database (for instance as part of an
        existing application), and no new application is needed to manage the rules.</para>

        <para>In this case, the drools-template library is worth a look - you can define templates for rules to be
        generated from any tabular data source.</para>

        <para>Otherwise, perhaps an existing rule management system and user interface already exists (and is tailored
        to your environment already) - in this case migrating to Guvnor may not be necessary.</para>

        <para>If you are using rules to solve complex algorithmic problems, and the rules are essentially an integral
        part of the application (and don't need to be managed separately to the code).</para>
      </section>
    </section>

    <section>
      <title>Who uses Guvnor</title>

      <para>The main roles of people who would use Guvnor are: Business Analyst, Rule expert, Developer, Administrators
      (rule administrators etc).</para>

      <para>Guvnor is designed in such a way as these different roles can be accommodated, it can be controlled how much
      is exposed to different users in a safe fashion.</para>
    </section>
  </section>

  <section>
    <title>Features outline</title>

    <itemizedlist>
      <listitem>
        <para>Multiple types of rule editors (GUI, text) including:-</para>

        <itemizedlist>
          <listitem>
            <para>Guided Rule Editor</para>
          </listitem>

          <listitem>
            <para>Rule Templates</para>
          </listitem>

          <listitem>
            <para>Decision Tables</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Store multiple rule "assets" together as a package</para>
      </listitem>

      <listitem>
        <para>Domain Specific Language support</para>
      </listitem>

      <listitem>
        <para>Complex Event Processing support</para>
      </listitem>

      <listitem>
        <para>Version control (historical assets)</para>
      </listitem>

      <listitem>
        <para>Testing of rules</para>
      </listitem>

      <listitem>
        <para>Validation and verification of rules</para>
      </listitem>

      <listitem>
        <para>Categorization</para>
      </listitem>

      <listitem>
        <para>Build and deploy including:-</para>

        <itemizedlist>
          <listitem>
            <para>Assembly of assets into a binary package for use with a ChangeSet or KnowledgeBuilder.</para>
          </listitem>

          <listitem>
            <para>Assembly of a self-contained camel-server.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>REST API to manipulate assets.</para>
      </listitem>

      <listitem>
        <para>WEBDAV integration.</para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>
